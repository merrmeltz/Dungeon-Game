import spyral
import random
import math

WIDTH = 1200
HEIGHT = 900
SIZE = (WIDTH, HEIGHT)
FONT_PATH = "libraries/spyral/resources/fonts/DejaVuSans.ttf"
class StoreForm(spyral.Form):
	store_button = spyral.widgets.Button("")
	item_number = 0
	item_price = 0
	item_cost_text = ''


class ItemPrice(spyral.Sprite):
	def __init__(self,scene,img,x,y):
		spyral.Sprite.__init__(self,scene)
		self.image = img
		self.x = x
		self.y = y


class Store(spyral.Scene):


	def __init__(self,character):
		spyral.Scene.__init__(self, SIZE)
		self.background = spyral.Image(size=SIZE).fill((255,255,255))
		spyral.event.register("system.quit", spyral.director.pop)
		spyral.event.register("input.keyboard.down.q", spyral.director.pop)
		spyral.event.register("form.StoreForm.store_button.clicked",self.itemClicked)
		itemFont = spyral.Font(FONT_PATH,14,(0,0,0))
		button_row = [200]
		button_column = [200,400,600, 800]
		styleList = ["game/store/style1.spys","game/store/style2.spys","game/store/style3.spys", "game/store/style4.spys"]
		styleIndex = 0
		self.buttonList = []
		self.player = character
		#self.load_style(styleList[styleIndex])
		itemIndex = 1
		for row_value in button_row:
			for column_value in button_column:
				#self.load_style(styleList[styleIndex])
				temp = StoreForm(self)
				temp.store_button.x = row_value
				temp.store_button.y = column_value
				temp.item_number = itemIndex
				'''
				if(self.checkIfItemBought(temp.item_number) == True):
					item_cost_text = itemFont.render("sold")
					ItemPrice(self,item_cost_text,(row_value + 100),column_value)
				else:
				'''
				temp.item_price = column_value / 2
				item_cost_text = itemFont.render(str(temp.item_price))
				ItemPrice(self,item_cost_text,(row_value + 100),column_value)
				self.buttonList.append(temp)
				itemIndex += 1
				styleIndex += 1
				
	def itemClicked(self,widget,form,value):
		if(form.item_number == 1):
			self.player.ownedItems.append(form.item_number)
		elif(form.item_number == 2):
			print "item 2"
		elif(form.item_number == 3):
			self.sceneReturn.setCharacter(self.player)
			for button in self.buttonList:
				button.kill()
			spyral.director.pop()
			

	def checkIfItemBought(self,item_number):
		for item in self.player.ownedItems:
			if(item == item_number):
				return True
		return False	

	def setSceneReturn(self,scene):
		self.sceneReturn = scene

	def setCharacter(self,character):
		self.player = character
	#def setScene
